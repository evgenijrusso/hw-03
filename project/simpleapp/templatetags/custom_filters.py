from django import template

register = template.Library()

# Регистрируем наш фильтр под именем currency, чтоб Django понимал,
# что это именно фильтр для шаблонов, а не простая функция.

# добавление валюты и изменение в функции
CURRENCIES_SYMBOLS = {
   'rub': 'Р',
   'usd': '$',
}


@register.filter()
def currency(value, code='rub'):
   """
   value: значение, к которому нужно применить фильтр
   """
   # Возвращаемое функцией значение подставится в шаблон.
   postfix = CURRENCIES_SYMBOLS[code]
   return f'{value} {postfix}'  # Р (был ранее)

# Декоратор register.filter() указывает Django, что нужно запомнить про существование нового фильтра.
# Название фильтра по умолчанию берется равным названию функции, то есть в шаблонах мы можем писать {{ price|currency }}.
# Однако Django дает нам возможность самим указать название фильтра.
# Например, если бы мы указали register.filter(name=’currency_rub’), а название функции не меняли,
# тогда в шаблонах мы вызывали фильтр следующим образом {{ price|currency_rub }}.

# Функция, которую мы зарегистрировали как фильтр, очень простая на данный момент.
# Она принимает один аргумент — переменную, с которой его используют в шаблоне.
# Сама функция у нас выполняет просто форматирование строки и сразу её возвращает.
# Результат этой функции и будет подставлен у нас в шаблоне.

# После добавления файла с новыми фильтрами, необходимо перезагрузить Django-сервер.

# Просто взять и указать функцию в шаблоне не получится.
# Django лениво работает с фильтрами (бережет оперативную память, время и так далее), и для начала нам нужно сказать,
# что мы хотим подключить свои фильтры. Сделать это можно с помощью указания тега {% load custom_filters %}.
# Где сustom_filters — это название Python файла, который мы создали в папке simpleapp/templatetags/.

# Теперь наконец-то используем наш фильтр в templates/products.html.

# Но что насчет аргументов, которые мы использовали в других фильтрах и как с ними работать?
# Для того чтобы в этом разобраться, добавим возможность выбора указываемой валюты.

#  Добавляем валюту

# Мы добавили в файл словарь со списком кодов валют и их символов, который используем в функции.
#Если прямо сейчас перезагрузить страницу, не внося изменения в шаблон, то мы не увидим никаких ошибок насчет того,
# что аргумент у фильтра есть, а мы его не используем. Всё потому, что мы указали в функции значение по умолчанию.
# То есть, если в шаблоне нам не указали аргумент фильтра, мы будем использовать рубли.

# Но всё-таки давайте изменим валюту, используемую в шаблоне, на доллары и посмотрим, что всё работает.
